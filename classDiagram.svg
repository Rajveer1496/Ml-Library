<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" data-diagram-type="CLASS" height="1114px" preserveAspectRatio="none" style="width:9310px;height:1114px;background:#1B1B1B;" version="1.1" viewBox="0 0 9310 1114" width="9310px" zoomAndPan="magnify"><defs/><g><rect fill="#1B1B1B" height="1114" style="stroke:none;stroke-width:1;" width="9310" x="0" y="0"/><!--cluster core--><g class="cluster" data-entity="core" data-source-line="2" data-uid="ent0004" id="cluster_core"><path d="M8.5,6 L43.8164,6 A3.75,3.75 0 0 1 46.3164,8.5 L53.3164,28.2969 L9300.5,28.2969 A2.5,2.5 0 0 1 9303,30.7969 L9303,1104.67 A2.5,2.5 0 0 1 9300.5,1107.17 L8.5,1107.17 A2.5,2.5 0 0 1 6,1104.67 L6,8.5 A2.5,2.5 0 0 1 8.5,6" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="6" x2="53.3164" y1="28.2969" y2="28.2969"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="34.3164" x="10" y="20.9951">core</text></g><!--cluster algorithms--><g class="cluster" data-entity="algorithms" data-source-line="2" data-uid="ent0005" id="cluster_algorithms"><path d="M32.5,49 L118.6689,49 A3.75,3.75 0 0 1 121.1689,51.5 L128.1689,71.2969 L8643.5,71.2969 A2.5,2.5 0 0 1 8646,73.7969 L8646,1080.67 A2.5,2.5 0 0 1 8643.5,1083.17 L32.5,1083.17 A2.5,2.5 0 0 1 30,1080.67 L30,51.5 A2.5,2.5 0 0 1 32.5,49" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="30" x2="128.1689" y1="71.2969" y2="71.2969"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="85.1689" x="34" y="63.9951">algorithms</text></g><!--cluster supervised--><g class="cluster" data-entity="supervised" data-source-line="1" data-uid="ent0002" id="cluster_supervised"><path d="M56.5,92 L143.9951,92 A3.75,3.75 0 0 1 146.4951,94.5 L153.4951,114.2969 L8619.5,114.2969 A2.5,2.5 0 0 1 8622,116.7969 L8622,1056.67 A2.5,2.5 0 0 1 8619.5,1059.17 L56.5,1059.17 A2.5,2.5 0 0 1 54,1056.67 L54,94.5 A2.5,2.5 0 0 1 56.5,92" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="54" x2="153.4951" y1="114.2969" y2="114.2969"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="86.4951" x="58" y="106.9951">supervised</text></g><!--cluster classification--><g class="cluster" data-entity="classification" data-source-line="4" data-uid="ent0006" id="cluster_classification"><path d="M80.5,224.63 L185.2217,224.63 A3.75,3.75 0 0 1 187.7217,227.13 L194.7217,246.9269 L685.5,246.9269 A2.5,2.5 0 0 1 688,249.4269 L688,963.48 A2.5,2.5 0 0 1 685.5,965.98 L80.5,965.98 A2.5,2.5 0 0 1 78,963.48 L78,227.13 A2.5,2.5 0 0 1 80.5,224.63" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="78" x2="194.7217" y1="246.9269" y2="246.9269"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="103.7217" x="82" y="239.6251">classification</text></g><!--cluster regression--><g class="cluster" data-entity="regression" data-source-line="38" data-uid="ent0010" id="cluster_regression"><path d="M714.5,135 L799.3701,135 A3.75,3.75 0 0 1 801.8701,137.5 L808.8701,157.2969 L8522.5,157.2969 A2.5,2.5 0 0 1 8525,159.7969 L8525,1032.67 A2.5,2.5 0 0 1 8522.5,1035.17 L714.5,1035.17 A2.5,2.5 0 0 1 712,1032.67 L712,137.5 A2.5,2.5 0 0 1 714.5,135" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="712" x2="808.8701" y1="157.2969" y2="157.2969"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="83.8701" x="716" y="149.9951">regression</text></g><!--cluster costFunction--><g class="cluster" data-entity="costFunction" data-source-line="152" data-uid="ent0022" id="cluster_costFunction"><path d="M738.5,265.37 L841.3145,265.37 A3.75,3.75 0 0 1 843.8145,267.87 L850.8145,287.6669 L3062.5,287.6669 A2.5,2.5 0 0 1 3065,290.1669 L3065,475.95 A2.5,2.5 0 0 1 3062.5,478.45 L738.5,478.45 A2.5,2.5 0 0 1 736,475.95 L736,267.87 A2.5,2.5 0 0 1 738.5,265.37" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="736" x2="850.8145" y1="287.6669" y2="287.6669"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="101.8145" x="740" y="280.3651">costFunction</text></g><!--cluster interfaces--><g class="cluster" data-entity="interfaces" data-source-line="182" data-uid="ent0027" id="cluster_interfaces"><path d="M2741.5,752.9 L2822.0225,752.9 A3.75,3.75 0 0 1 2824.5225,755.4 L2831.5225,775.1969 L3935.5,775.1969 A2.5,2.5 0 0 1 3938,777.6969 L3938,914.59 A2.5,2.5 0 0 1 3935.5,917.09 L2741.5,917.09 A2.5,2.5 0 0 1 2739,914.59 L2739,755.4 A2.5,2.5 0 0 1 2741.5,752.9" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="2739" x2="2831.5225" y1="775.1969" y2="775.1969"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="79.5225" x="2743" y="767.8951">interfaces</text></g><!--cluster optimizer--><g class="cluster" data-entity="optimizer" data-source-line="196" data-uid="ent0030" id="cluster_optimizer"><path d="M3091.5,208.33 L3167.5654,208.33 A3.75,3.75 0 0 1 3170.0654,210.83 L3177.0654,230.6269 L6797.5,230.6269 A2.5,2.5 0 0 1 6800,233.1269 L6800,532.99 A2.5,2.5 0 0 1 6797.5,535.49 L3091.5,535.49 A2.5,2.5 0 0 1 3089,532.99 L3089,210.83 A2.5,2.5 0 0 1 3091.5,208.33" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="3089" x2="3177.0654" y1="230.6269" y2="230.6269"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="75.0654" x="3093" y="223.3251">optimizer</text></g><!--cluster utils--><g class="cluster" data-entity="utils" data-source-line="271" data-uid="ent0043" id="cluster_utils"><path d="M8672.5,249.08 L8708.0898,249.08 A3.75,3.75 0 0 1 8710.5898,251.58 L8717.5898,271.3769 L9276.5,271.3769 A2.5,2.5 0 0 1 9279,273.8769 L9279,492.25 A2.5,2.5 0 0 1 9276.5,494.75 L8672.5,494.75 A2.5,2.5 0 0 1 8670,492.25 L8670,251.58 A2.5,2.5 0 0 1 8672.5,249.08" fill="none" style="stroke:#FFFFFF;stroke-width:1.5;"/><line style="stroke:#FFFFFF;stroke-width:1.5;" x1="8670" x2="8717.5898" y1="271.3769" y2="271.3769"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="34.5898" x="8674" y="264.0751">utils</text></g><!--class Test--><g class="entity" data-entity="Test" data-source-line="2" data-uid="ent0003" id="entity_Test"><rect fill="#313139" height="48" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="61.9482" x="8544.03" y="357.41"/><ellipse cx="8559.03" cy="373.41" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M8561.9988,379.0506 Q8561.4206,379.3475 8560.78,379.4881 Q8560.1394,379.6444 8559.4363,379.6444 Q8556.9363,379.6444 8555.6081,378.0038 Q8554.2956,376.3475 8554.2956,373.2225 Q8554.2956,370.0975 8555.6081,368.4413 Q8556.9363,366.785 8559.4363,366.785 Q8560.1394,366.785 8560.78,366.9413 Q8561.4363,367.0975 8561.9988,367.3944 L8561.9988,370.1131 Q8561.3738,369.535 8560.78,369.2694 Q8560.1863,368.9881 8559.5613,368.9881 Q8558.2175,368.9881 8557.53,370.0663 Q8556.8425,371.1288 8556.8425,373.2225 Q8556.8425,375.3163 8557.53,376.3944 Q8558.2175,377.4569 8559.5613,377.4569 Q8560.1863,377.4569 8560.78,377.1913 Q8561.3738,376.91 8561.9988,376.3319 L8561.9988,379.0506 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="29.9482" x="8573.03" y="378.2567">Test</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="8545.03" x2="8604.9782" y1="389.41" y2="389.41"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="8545.03" x2="8604.9782" y1="397.41" y2="397.41"/></g><!--class DecisionTreeClassifier--><g class="entity" data-entity="DecisionTreeClassifier" data-source-line="5" data-uid="ent0007" id="entity_DecisionTreeClassifier"><rect fill="#313139" height="210.9688" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="512.124" x="126.94" y="739.01"/><ellipse cx="301.2291" cy="755.01" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M304.1978,760.6506 Q303.6197,760.9475 302.9791,761.0881 Q302.3384,761.2444 301.6353,761.2444 Q299.1353,761.2444 297.8072,759.6038 Q296.4947,757.9475 296.4947,754.8225 Q296.4947,751.6975 297.8072,750.0413 Q299.1353,748.385 301.6353,748.385 Q302.3384,748.385 302.9791,748.5413 Q303.6353,748.6975 304.1978,748.9944 L304.1978,751.7131 Q303.5728,751.135 302.9791,750.8694 Q302.3853,750.5881 301.7603,750.5881 Q300.4166,750.5881 299.7291,751.6663 Q299.0416,752.7288 299.0416,754.8225 Q299.0416,756.9163 299.7291,757.9944 Q300.4166,759.0569 301.7603,759.0569 Q302.3853,759.0569 302.9791,758.7913 Q303.5728,758.51 304.1978,757.9319 L304.1978,760.6506 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155.0459" x="321.7291" y="759.8567">DecisionTreeClassifier</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="127.94" x2="638.064" y1="771.01" y2="771.01"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="134.94" y="781.6584"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93.9531" x="146.94" y="788.0051">int maxdepth</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="134.94" y="797.9553"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129.4521" x="146.94" y="804.302">int minsamplesplit</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="134.94" y="814.2522"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69.3643" x="146.94" y="820.5989">Node root</text><line style="stroke:#E7E7E7;stroke-width:1;" x1="127.94" x2="638.064" y1="827.9006" y2="827.9006"/><ellipse cx="137.94" cy="841.5491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398.2754" x="146.94" y="844.8957">DecisionTreeClassifier(int maxdepth, int minsamplesplit)</text><ellipse cx="137.94" cy="857.8459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193.7236" x="146.94" y="861.1926">void fit(double[][] X, int[] y)</text><ellipse cx="137.94" cy="874.1428" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154.2188" x="146.94" y="877.4895">int predict(double[] x)</text><ellipse cx="137.94" cy="890.4397" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177.3721" x="146.94" y="893.7864">int[] predict(double[][] X)</text><ellipse cx="137.94" cy="906.7366" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99.2578" x="146.94" y="910.0832">int getDepth()</text><ellipse cx="137.94" cy="923.0334" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140.54" x="146.94" y="926.3801">String getTreeJson()</text><ellipse cx="137.94" cy="939.3303" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486.124" x="146.94" y="942.677">static DecisionTreeClassifier fromJson(Map&lt;String, Object&gt; treeJson)</text></g><!--class RandomForestClassifier--><g class="entity" data-entity="RandomForestClassifier" data-source-line="19" data-uid="ent0008" id="entity_RandomForestClassifier"><rect fill="#313139" height="243.5625" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="578.6855" x="93.66" y="259.63"/><ellipse cx="295.7782" cy="275.63" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M298.7469,281.2706 Q298.1688,281.5675 297.5282,281.7081 Q296.8875,281.8644 296.1844,281.8644 Q293.6844,281.8644 292.3563,280.2238 Q291.0438,278.5675 291.0438,275.4425 Q291.0438,272.3175 292.3563,270.6613 Q293.6844,269.005 296.1844,269.005 Q296.8875,269.005 297.5282,269.1613 Q298.1844,269.3175 298.7469,269.6144 L298.7469,272.3331 Q298.1219,271.755 297.5282,271.4894 Q296.9344,271.2081 296.3094,271.2081 Q294.9657,271.2081 294.2782,272.2863 Q293.5907,273.3488 293.5907,275.4425 Q293.5907,277.5363 294.2782,278.6144 Q294.9657,279.6769 296.3094,279.6769 Q296.9344,279.6769 297.5282,279.4113 Q298.1219,279.13 298.7469,278.5519 L298.7469,281.2706 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165.9492" x="316.2782" y="280.4767">RandomForestClassifier</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="94.66" x2="671.3455" y1="291.63" y2="291.63"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="101.66" y="302.2784"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89.8516" x="113.66" y="308.6251">int numtrees</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="101.66" y="318.5753"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93.9531" x="113.66" y="324.922">int maxdepth</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="101.66" y="334.8722"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129.4521" x="113.66" y="341.2189">int minsamplesplit</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="101.66" y="351.1691"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243.1953" x="113.66" y="357.5157">List&lt;DecisionTreeClassifier&gt; trees</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="101.66" y="367.4659"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94.8145" x="113.66" y="373.8126">Random rand</text><line style="stroke:#E7E7E7;stroke-width:1;" x1="94.66" x2="671.3455" y1="381.1144" y2="381.1144"/><ellipse cx="104.66" cy="394.7628" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="507.9307" x="113.66" y="398.1095">RandomForestClassifier(int numtrees, int maxdepth, int minsamplesplit)</text><ellipse cx="104.66" cy="411.0597" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193.7236" x="113.66" y="414.4064">void fit(double[][] X, int[] y)</text><ellipse cx="104.66" cy="427.3566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154.2188" x="113.66" y="430.7032">int predict(double[] x)</text><ellipse cx="104.66" cy="443.6534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177.3721" x="113.66" y="447.0001">int[] predict(double[][] X)</text><ellipse cx="104.66" cy="459.9503" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167.6309" x="113.66" y="463.297">int getNumberOfTrees()</text><ellipse cx="104.66" cy="476.2472" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152.7764" x="113.66" y="479.5939">String getForestJson()</text><ellipse cx="104.66" cy="492.5441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="552.6855" x="113.66" y="495.8907">static RandomForestClassifier fromJson(List&lt;Map&lt;String,Object&gt;&gt; forestJson)</text></g><!--class DecisionTreeRegressor--><g class="entity" data-entity="DecisionTreeRegressor" data-source-line="39" data-uid="ent0011" id="entity_DecisionTreeRegressor"><rect fill="#313139" height="422.8281" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="657.9619" x="7851.02" y="170"/><ellipse cx="8094.9297" cy="186" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M8097.8984,191.6406 Q8097.3203,191.9375 8096.6797,192.0781 Q8096.039,192.2344 8095.3359,192.2344 Q8092.8359,192.2344 8091.5078,190.5938 Q8090.1953,188.9375 8090.1953,185.8125 Q8090.1953,182.6875 8091.5078,181.0313 Q8092.8359,179.375 8095.3359,179.375 Q8096.039,179.375 8096.6797,179.5313 Q8097.3359,179.6875 8097.8984,179.9844 L8097.8984,182.7031 Q8097.2734,182.125 8096.6797,181.8594 Q8096.0859,181.5781 8095.4609,181.5781 Q8094.1172,181.5781 8093.4297,182.6563 Q8092.7422,183.7188 8092.7422,185.8125 Q8092.7422,187.9063 8093.4297,188.9844 Q8094.1172,190.0469 8095.4609,190.0469 Q8096.0859,190.0469 8096.6797,189.7813 Q8097.2734,189.5 8097.8984,188.9219 L8097.8984,191.6406 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161.6426" x="8115.4297" y="190.8467">DecisionTreeRegressor</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="7852.02" x2="8507.9819" y1="202" y2="202"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="212.6484"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93.9531" x="7871.02" y="218.9951">int maxdepth</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="228.9453"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129.4521" x="7871.02" y="235.292">int minsamplesplit</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="245.2422"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69.3643" x="7871.02" y="251.5889">Node root</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="261.5391"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114.4746" x="7871.02" y="267.8857">int maxFeatures</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="277.8359"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94.8145" x="7871.02" y="284.1826">Random rand</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="7852.02" x2="8507.9819" y1="291.4844" y2="291.4844"/><ellipse cx="7862.02" cy="305.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="404.8721" x="7871.02" y="308.4795">DecisionTreeRegressor(int maxdepth, int minsamplesplit)</text><ellipse cx="7862.02" cy="321.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="631.9619" x="7871.02" y="324.7764">DecisionTreeRegressor(int maxdepth, int minsamplesplit, int maxFeatures, Random rand)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="334.7266"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241.9307" x="7871.02" y="341.0732">DecisionTreeRegressor(Node root)</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4.4502" x="7871.02" y="357.3701">&#160;</text><ellipse cx="7862.02" cy="370.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221.8809" x="7871.02" y="373.667">void fit(double[][] x, double[] y)</text><ellipse cx="7862.02" cy="386.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216.4531" x="7871.02" y="389.9639">double predict_row(double[] x)</text><ellipse cx="7862.02" cy="402.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205.5293" x="7871.02" y="406.2607">double[] predict(double[][] x)</text><ellipse cx="7862.02" cy="419.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99.2578" x="7871.02" y="422.5576">int getDepth()</text><ellipse cx="7862.02" cy="435.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140.54" x="7871.02" y="438.8545">String getTreeJson()</text><ellipse cx="7862.02" cy="451.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="488.2705" x="7871.02" y="455.1514">static DecisionTreeRegressor fromJson(Map&lt;String,Object&gt; treeJson)</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4.4502" x="7871.02" y="471.4482">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="481.3984"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="349.7334" x="7871.02" y="487.7451">Node buildtree(double[][] x, double[] y, int depth)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="497.6953"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277.6758" x="7871.02" y="504.042">double traverse(Node node, double[] x)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="513.9922"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="340.4912" x="7871.02" y="520.3389">SplitResult findbestsplit(double[][] X, double[] y)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="530.2891"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164.0078" x="7871.02" y="536.6357">double mse(double[] y)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="546.5859"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175.1846" x="7871.02" y="552.9326">int getDepth(Node node)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="562.8828"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213.999" x="7871.02" y="569.2295">String nodeToJson(Node node)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7859.02" y="579.1797"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407.6953" x="7871.02" y="585.5264">static Node nodeFromJson(Map&lt;String,Object&gt; nodeJson)</text></g><!--class Node--><g class="entity" data-entity="Node" data-source-line="66" data-uid="ent0012" id="entity_Node"><rect fill="#313139" height="178.375" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="450.9766" x="7121.51" y="755.31"/><ellipse cx="7324.4792" cy="771.31" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M7327.448,776.9506 Q7326.8699,777.2475 7326.2292,777.3881 Q7325.5886,777.5444 7324.8855,777.5444 Q7322.3855,777.5444 7321.0574,775.9038 Q7319.7449,774.2475 7319.7449,771.1225 Q7319.7449,767.9975 7321.0574,766.3413 Q7322.3855,764.685 7324.8855,764.685 Q7325.5886,764.685 7326.2292,764.8413 Q7326.8855,764.9975 7327.448,765.2944 L7327.448,768.0131 Q7326.823,767.435 7326.2292,767.1694 Q7325.6355,766.8881 7325.0105,766.8881 Q7323.6667,766.8881 7322.9792,767.9663 Q7322.2917,769.0288 7322.2917,771.1225 Q7322.2917,773.2163 7322.9792,774.2944 Q7323.6667,775.3569 7325.0105,775.3569 Q7325.6355,775.3569 7326.2292,775.0913 Q7326.823,774.81 7327.448,774.2319 L7327.448,776.9506 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="36.5381" x="7344.9792" y="776.1567">Node</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="7122.51" x2="7571.4866" y1="787.31" y2="787.31"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7129.51" y="797.9584"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94.6162" x="7141.51" y="804.3051">int featureidx</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7129.51" y="814.2553"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118.4053" x="7141.51" y="820.602">double threshold</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7129.51" y="830.5522"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63.9092" x="7141.51" y="836.8989">Node left</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7129.51" y="846.8491"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73.8828" x="7141.51" y="853.1957">Node right</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7129.51" y="863.1459"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90.4053" x="7141.51" y="869.4926">double value</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7129.51" y="879.4428"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97.6172" x="7141.51" y="885.7895">boolean isleaf</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="7122.51" x2="7571.4866" y1="893.0913" y2="893.0913"/><ellipse cx="7132.51" cy="906.7397" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137.8672" x="7141.51" y="910.0864">Node(double value)</text><ellipse cx="7132.51" cy="923.0366" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="424.9766" x="7141.51" y="926.3832">Node(int featureidx, double threshold, Node left, Node right)</text></g><!--class SplitResult--><g class="entity" data-entity="SplitResult" data-source-line="78" data-uid="ent0013" id="entity_SplitResult"><rect fill="#313139" height="162.0781" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="790.9619" x="7718.52" y="763.46"/><ellipse cx="8072.2866" cy="779.46" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M8075.2554,785.1006 Q8074.6772,785.3975 8074.0366,785.5381 Q8073.396,785.6944 8072.6929,785.6944 Q8070.1929,785.6944 8068.8647,784.0538 Q8067.5522,782.3975 8067.5522,779.2725 Q8067.5522,776.1475 8068.8647,774.4913 Q8070.1929,772.835 8072.6929,772.835 Q8073.396,772.835 8074.0366,772.9913 Q8074.6929,773.1475 8075.2554,773.4444 L8075.2554,776.1631 Q8074.6304,775.585 8074.0366,775.3194 Q8073.4429,775.0381 8072.8179,775.0381 Q8071.4741,775.0381 8070.7866,776.1163 Q8070.0991,777.1788 8070.0991,779.2725 Q8070.0991,781.3663 8070.7866,782.4444 Q8071.4741,783.5069 8072.8179,783.5069 Q8073.4429,783.5069 8074.0366,783.2413 Q8074.6304,782.96 8075.2554,782.3819 L8075.2554,785.1006 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74.9287" x="8092.7866" y="784.3067">SplitResult</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="7719.52" x2="8508.4819" y1="795.46" y2="795.46"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7726.52" y="806.1084"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94.6162" x="7738.52" y="812.4551">int featureidx</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7726.52" y="822.4053"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118.4053" x="7738.52" y="828.752">double threshold</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7726.52" y="838.7022"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106.5244" x="7738.52" y="845.0489">double[][] Xleft</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7726.52" y="854.9991"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116.498" x="7738.52" y="861.3457">double[][] Xright</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7726.52" y="871.2959"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94.2949" x="7738.52" y="877.6426">double[] yleft</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7726.52" y="887.5928"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104.2686" x="7738.52" y="893.9395">double[] yright</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="7719.52" x2="8508.4819" y1="901.2413" y2="901.2413"/><ellipse cx="7729.52" cy="914.8897" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="764.9619" x="7738.52" y="918.2364">SplitResult(int featureidx, double threshold, double[][] Xleft, double[] yleft, double[][] Xright, double[] yright)</text></g><!--class InteractiveTest--><g class="entity" data-entity="InteractiveTest" data-source-line="93" data-uid="ent0018" id="entity_InteractiveTest"><rect fill="#313139" height="96.8906" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="506.2383" x="6818.88" y="332.97"/><ellipse cx="7015.068" cy="348.97" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M7018.0367,354.6106 Q7017.4586,354.9075 7016.818,355.0481 Q7016.1774,355.2044 7015.4742,355.2044 Q7012.9742,355.2044 7011.6461,353.5638 Q7010.3336,351.9075 7010.3336,348.7825 Q7010.3336,345.6575 7011.6461,344.0013 Q7012.9742,342.345 7015.4742,342.345 Q7016.1774,342.345 7016.818,342.5013 Q7017.4742,342.6575 7018.0367,342.9544 L7018.0367,345.6731 Q7017.4117,345.095 7016.818,344.8294 Q7016.2242,344.5481 7015.5992,344.5481 Q7014.2555,344.5481 7013.568,345.6263 Q7012.8805,346.6888 7012.8805,348.7825 Q7012.8805,350.8763 7013.568,351.9544 Q7014.2555,353.0169 7015.5992,353.0169 Q7016.2242,353.0169 7016.818,352.7513 Q7017.4117,352.47 7018.0367,351.8919 L7018.0367,354.6106 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105.3623" x="7035.568" y="353.8167">InteractiveTest</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="6819.88" x2="7324.1183" y1="364.97" y2="364.97"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="6819.88" x2="7324.1183" y1="372.97" y2="372.97"/><ellipse cx="6829.88" cy="386.6184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210.54" x="6838.88" y="389.9651">static void main(String[] args)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6826.88" y="399.9153"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="480.2383" x="6838.88" y="406.262">static CostFunction createCostFunction(int choice, Scanner scanner)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6826.88" y="416.2122"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="434.4238" x="6838.88" y="422.5589">static Optimizer createOptimizer(int choice, Scanner scanner)</text></g><!--class LinearRegression--><g class="entity" data-entity="LinearRegression" data-source-line="98" data-uid="ent0019" id="entity_LinearRegression"><rect fill="#313139" height="243.5625" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="455.96" x="7360.02" y="259.63"/><ellipse cx="7523.2383" cy="275.63" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M7526.207,281.2706 Q7525.6289,281.5675 7524.9883,281.7081 Q7524.3476,281.8644 7523.6445,281.8644 Q7521.1445,281.8644 7519.8164,280.2238 Q7518.5039,278.5675 7518.5039,275.4425 Q7518.5039,272.3175 7519.8164,270.6613 Q7521.1445,269.005 7523.6445,269.005 Q7524.3476,269.005 7524.9883,269.1613 Q7525.6445,269.3175 7526.207,269.6144 L7526.207,272.3331 Q7525.582,271.755 7524.9883,271.4894 Q7524.3945,271.2081 7523.7695,271.2081 Q7522.4258,271.2081 7521.7383,272.2863 Q7521.0508,273.3488 7521.0508,275.4425 Q7521.0508,277.5363 7521.7383,278.6144 Q7522.4258,279.6769 7523.7695,279.6769 Q7524.3945,279.6769 7524.9883,279.4113 Q7525.582,279.13 7526.207,278.5519 L7526.207,281.2706 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.0234" x="7543.7383" y="280.4767">LinearRegression</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="7361.02" x2="7814.98" y1="291.63" y2="291.63"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7368.02" y="302.2784"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144.9629" x="7380.02" y="308.6251">double learning_rate</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7368.02" y="318.5753"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72.6318" x="7380.02" y="324.922">int epochs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7368.02" y="334.8722"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117.585" x="7380.02" y="341.2189">double[] weights</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="7368.02" y="351.1691"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80.8145" x="7380.02" y="357.5157">double bias</text><line style="stroke:#E7E7E7;stroke-width:1;" x1="7361.02" x2="7814.98" y1="364.8175" y2="364.8175"/><ellipse cx="7371.02" cy="378.4659" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398.918" x="7380.02" y="381.8126">LinearRegression(double learning_rate, int epochs, int n)</text><ellipse cx="7371.02" cy="394.7628" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263.1016" x="7380.02" y="398.1095">double predictOne(double[] rowData)</text><ellipse cx="7371.02" cy="411.0597" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295.1484" x="7380.02" y="414.4064">double[] predict_all(double[][] input_data)</text><ellipse cx="7371.02" cy="427.3566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="429.96" x="7380.02" y="430.7032">double error_cal(double[][] input_data, double[] output_data)</text><ellipse cx="7371.02" cy="443.6534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233.9189" x="7380.02" y="447.0001">void modify(double[] x, double y)</text><ellipse cx="7371.02" cy="459.9503" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364.5674" x="7380.02" y="463.297">void fit(double[][] input_data, double[] output_data)</text><ellipse cx="7371.02" cy="476.2472" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153.8906" x="7380.02" y="479.5939">double[] getWeights()</text><ellipse cx="7371.02" cy="492.5441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115.4453" x="7380.02" y="495.8907">double getBias()</text></g><!--class ModularLinearRegression--><g class="entity" data-entity="ModularLinearRegression" data-source-line="113" data-uid="ent0020" id="entity_ModularLinearRegression"><rect fill="#313139" height="349.3438" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="904.4043" x="5561.8" y="669.83"/><ellipse cx="5920.926" cy="685.83" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M5923.8947,691.4706 Q5923.3166,691.7675 5922.676,691.9081 Q5922.0354,692.0644 5921.3322,692.0644 Q5918.8322,692.0644 5917.5041,690.4238 Q5916.1916,688.7675 5916.1916,685.6425 Q5916.1916,682.5175 5917.5041,680.8613 Q5918.8322,679.205 5921.3322,679.205 Q5922.0354,679.205 5922.676,679.3613 Q5923.3322,679.5175 5923.8947,679.8144 L5923.8947,682.5331 Q5923.2697,681.955 5922.676,681.6894 Q5922.0822,681.4081 5921.4572,681.4081 Q5920.1135,681.4081 5919.426,682.4863 Q5918.7385,683.5488 5918.7385,685.6425 Q5918.7385,687.7363 5919.426,688.8144 Q5920.1135,689.8769 5921.4572,689.8769 Q5922.0822,689.8769 5922.676,689.6113 Q5923.2697,689.33 5923.8947,688.7519 L5923.8947,691.4706 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177.6523" x="5941.426" y="690.6767">ModularLinearRegression</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="5562.8" x2="6465.2043" y1="701.83" y2="701.83"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="712.4784"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141.9346" x="5581.8" y="718.8251">double learningRate</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="728.7753"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72.6318" x="5581.8" y="735.122">int epochs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="745.0722"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117.585" x="5581.8" y="751.4189">double[] weights</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="761.3691"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80.8145" x="5581.8" y="767.7157">double bias</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="777.6659"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185.2471" x="5581.8" y="784.0126">CostFunction costFunction</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="793.9628"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139.0566" x="5581.8" y="800.3095">Optimizer optimizer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="810.2597"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117.0176" x="5581.8" y="816.6064">Random random</text><line style="stroke:#E7E7E7;stroke-width:1;" x1="5562.8" x2="6465.2043" y1="823.9081" y2="823.9081"/><ellipse cx="5572.8" cy="837.5566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="878.4043" x="5581.8" y="840.9032">ModularLinearRegression(double learningRate, int epochs, int numFeatures, CostFunction costFunction, Optimizer optimizer)</text><ellipse cx="5572.8" cy="853.8534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263.1016" x="5581.8" y="857.2001">double predictOne(double[] rowData)</text><ellipse cx="5572.8" cy="870.1503" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284.04" x="5581.8" y="873.497">double[] predictAll(double[][] inputData)</text><ellipse cx="5572.8" cy="886.4472" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="456.1211" x="5581.8" y="889.7939">double calculateError(double[][] inputData, double[] outputData)</text><ellipse cx="5572.8" cy="902.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="354.3545" x="5581.8" y="906.0907">void fit(double[][] inputData, double[] outputData)</text><ellipse cx="5572.8" cy="919.0409" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153.8906" x="5581.8" y="922.3876">double[] getWeights()</text><ellipse cx="5572.8" cy="935.3378" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115.4453" x="5581.8" y="938.6845">double getBias()</text><ellipse cx="5572.8" cy="951.6347" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240.8711" x="5581.8" y="954.9814">void setWeights(double[] weights)</text><ellipse cx="5572.8" cy="967.9316" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="176.5791" x="5581.8" y="971.2782">void setBias(double bias)</text><line style="stroke:#E7E7E7;stroke-width:1;" x1="5562.8" x2="6465.2043" y1="978.58" y2="978.58"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="989.2284"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394.5977" x="5581.8" y="995.5751">void fitBatch(double[][] inputData, double[] outputData)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5569.8" y="1005.5253"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="423.3291" x="5581.8" y="1011.872">void fitMiniBatch(double[][] inputData, double[] outputData)</text></g><!--class RandomForestRegressor--><g class="entity" data-entity="RandomForestRegressor" data-source-line="135" data-uid="ent0021" id="entity_RandomForestRegressor"><rect fill="#313139" height="259.8594" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="585.2822" x="6501.36" y="714.57"/><ellipse cx="6703.4782" cy="730.57" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M6706.4469,736.2106 Q6705.8688,736.5075 6705.2282,736.6481 Q6704.5875,736.8044 6703.8844,736.8044 Q6701.3844,736.8044 6700.0563,735.1638 Q6698.7438,733.5075 6698.7438,730.3825 Q6698.7438,727.2575 6700.0563,725.6013 Q6701.3844,723.945 6703.8844,723.945 Q6704.5875,723.945 6705.2282,724.1013 Q6705.8844,724.2575 6706.4469,724.5544 L6706.4469,727.2731 Q6705.8219,726.695 6705.2282,726.4294 Q6704.6344,726.1481 6704.0094,726.1481 Q6702.6657,726.1481 6701.9782,727.2263 Q6701.2907,728.2888 6701.2907,730.3825 Q6701.2907,732.4763 6701.9782,733.5544 Q6702.6657,734.6169 6704.0094,734.6169 Q6704.6344,734.6169 6705.2282,734.3513 Q6705.8219,734.07 6706.4469,733.4919 L6706.4469,736.2106 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172.5459" x="6723.9782" y="735.4167">RandomForestRegressor</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="6502.36" x2="7085.6422" y1="746.57" y2="746.57"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6509.36" y="757.2184"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89.8516" x="6521.36" y="763.5651">int numtrees</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6509.36" y="773.5153"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93.9531" x="6521.36" y="779.862">int maxdepth</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6509.36" y="789.8122"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129.4521" x="6521.36" y="796.1589">int minsamplesplit</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6509.36" y="806.1091"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249.792" x="6521.36" y="812.4557">List&lt;DecisionTreeRegressor&gt; trees</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6509.36" y="822.4059"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94.8145" x="6521.36" y="828.7526">Random rand</text><line style="stroke:#E7E7E7;stroke-width:1;" x1="6502.36" x2="7085.6422" y1="836.0544" y2="836.0544"/><ellipse cx="6512.36" cy="849.7028" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="514.5273" x="6521.36" y="853.0495">RandomForestRegressor(int numtrees, int maxdepth, int minsamplesplit)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6509.36" y="862.9997"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="433.2617" x="6521.36" y="869.3464">RandomForestRegressor(List&lt;DecisionTreeRegressor&gt; trees)</text><ellipse cx="6512.36" cy="882.2966" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223.1865" x="6521.36" y="885.6432">void fit(double[][] X, double[] y)</text><ellipse cx="6512.36" cy="898.5934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216.4531" x="6521.36" y="901.9401">double predict_row(double[] x)</text><ellipse cx="6512.36" cy="914.8903" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="206.835" x="6521.36" y="918.237">double[] predict(double[][] X)</text><ellipse cx="6512.36" cy="931.1872" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167.6309" x="6521.36" y="934.5339">int getNumberOfTrees()</text><ellipse cx="6512.36" cy="947.4841" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152.7764" x="6521.36" y="950.8307">String getForestJson()</text><ellipse cx="6512.36" cy="963.7809" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="559.2822" x="6521.36" y="967.1276">static RandomForestRegressor fromJson(List&lt;Map&lt;String,Object&gt;&gt; forestJson)</text></g><!--class HuberLoss--><g class="entity" data-entity="HuberLoss" data-source-line="153" data-uid="ent0023" id="entity_HuberLoss"><rect fill="#313139" height="162.0781" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="548.3066" x="751.85" y="300.37"/><ellipse cx="984.9486" cy="316.37" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M987.9174,322.0106 Q987.3393,322.3075 986.6986,322.4481 Q986.058,322.6044 985.3549,322.6044 Q982.8549,322.6044 981.5268,320.9638 Q980.2143,319.3075 980.2143,316.1825 Q980.2143,313.0575 981.5268,311.4013 Q982.8549,309.745 985.3549,309.745 Q986.058,309.745 986.6986,309.9013 Q987.3549,310.0575 987.9174,310.3544 L987.9174,313.0731 Q987.2924,312.495 986.6986,312.2294 Q986.1049,311.9481 985.4799,311.9481 Q984.1361,311.9481 983.4486,313.0263 Q982.7611,314.0888 982.7611,316.1825 Q982.7611,318.2763 983.4486,319.3544 Q984.1361,320.4169 985.4799,320.4169 Q986.1049,320.4169 986.6986,320.1513 Q987.2924,319.87 987.9174,319.2919 L987.9174,322.0106 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73.6094" x="1005.4486" y="321.2167">HuberLoss</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="752.85" x2="1299.1566" y1="332.37" y2="332.37"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="759.85" y="343.0184"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87.623" x="771.85" y="349.3651">double delta</text><line style="stroke:#E7E7E7;stroke-width:1;" x1="752.85" x2="1299.1566" y1="356.6669" y2="356.6669"/><ellipse cx="762.85" cy="370.3153" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172.1563" x="771.85" y="373.662">HuberLoss(double delta)</text><ellipse cx="762.85" cy="386.6122" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84.5332" x="771.85" y="389.9589">HuberLoss()</text><ellipse cx="762.85" cy="402.9091" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380.5771" x="771.85" y="406.2557">double calculateCost(double predicted, double actual)</text><ellipse cx="762.85" cy="419.2059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="522.3066" x="771.85" y="422.5526">double calculateGradient(double predicted, double actual, double feature)</text><ellipse cx="762.85" cy="435.5028" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439.7559" x="771.85" y="438.8495">double calculateBiasGradient(double predicted, double actual)</text><ellipse cx="762.85" cy="451.7997" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="771.85" y="455.1464">String getName()</text></g><!--class LogCoshLoss--><g class="entity" data-entity="LogCoshLoss" data-source-line="163" data-uid="ent0024" id="entity_LogCoshLoss"><rect fill="#313139" height="113.1875" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="548.3066" x="1334.85" y="324.82"/><ellipse cx="1559.3969" cy="340.82" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M1562.3656,346.4606 Q1561.7875,346.7575 1561.1469,346.8981 Q1560.5063,347.0544 1559.8031,347.0544 Q1557.3031,347.0544 1555.975,345.4138 Q1554.6625,343.7575 1554.6625,340.6325 Q1554.6625,337.5075 1555.975,335.8513 Q1557.3031,334.195 1559.8031,334.195 Q1560.5063,334.195 1561.1469,334.3513 Q1561.8031,334.5075 1562.3656,334.8044 L1562.3656,337.5231 Q1561.7406,336.945 1561.1469,336.6794 Q1560.5531,336.3981 1559.9281,336.3981 Q1558.5844,336.3981 1557.8969,337.4763 Q1557.2094,338.5388 1557.2094,340.6325 Q1557.2094,342.7263 1557.8969,343.8044 Q1558.5844,344.8669 1559.9281,344.8669 Q1560.5531,344.8669 1561.1469,344.6013 Q1561.7406,344.32 1562.3656,343.7419 L1562.3656,346.4606 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90.7129" x="1579.8969" y="345.6667">LogCoshLoss</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="1335.85" x2="1882.1566" y1="356.82" y2="356.82"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="1335.85" x2="1882.1566" y1="364.82" y2="364.82"/><ellipse cx="1345.85" cy="378.4684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380.5771" x="1354.85" y="381.8151">double calculateCost(double predicted, double actual)</text><ellipse cx="1345.85" cy="394.7653" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="522.3066" x="1354.85" y="398.112">double calculateGradient(double predicted, double actual, double feature)</text><ellipse cx="1345.85" cy="411.0622" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439.7559" x="1354.85" y="414.4089">double calculateBiasGradient(double predicted, double actual)</text><ellipse cx="1345.85" cy="427.3591" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="1354.85" y="430.7057">String getName()</text></g><!--class MeanAbsoluteError--><g class="entity" data-entity="MeanAbsoluteError" data-source-line="169" data-uid="ent0025" id="entity_MeanAbsoluteError"><rect fill="#313139" height="113.1875" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="548.3066" x="1917.85" y="324.82"/><ellipse cx="2120.7475" cy="340.82" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M2123.7162,346.4606 Q2123.1381,346.7575 2122.4975,346.8981 Q2121.8568,347.0544 2121.1537,347.0544 Q2118.6537,347.0544 2117.3256,345.4138 Q2116.0131,343.7575 2116.0131,340.6325 Q2116.0131,337.5075 2117.3256,335.8513 Q2118.6537,334.195 2121.1537,334.195 Q2121.8568,334.195 2122.4975,334.3513 Q2123.1537,334.5075 2123.7162,334.8044 L2123.7162,337.5231 Q2123.0912,336.945 2122.4975,336.6794 Q2121.9037,336.3981 2121.2787,336.3981 Q2119.935,336.3981 2119.2475,337.4763 Q2118.56,338.5388 2118.56,340.6325 Q2118.56,342.7263 2119.2475,343.8044 Q2119.935,344.8669 2121.2787,344.8669 Q2121.9037,344.8669 2122.4975,344.6013 Q2123.0912,344.32 2123.7162,343.7419 L2123.7162,346.4606 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134.0117" x="2141.2475" y="345.6667">MeanAbsoluteError</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="1918.85" x2="2465.1566" y1="356.82" y2="356.82"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="1918.85" x2="2465.1566" y1="364.82" y2="364.82"/><ellipse cx="1928.85" cy="378.4684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380.5771" x="1937.85" y="381.8151">double calculateCost(double predicted, double actual)</text><ellipse cx="1928.85" cy="394.7653" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="522.3066" x="1937.85" y="398.112">double calculateGradient(double predicted, double actual, double feature)</text><ellipse cx="1928.85" cy="411.0622" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439.7559" x="1937.85" y="414.4089">double calculateBiasGradient(double predicted, double actual)</text><ellipse cx="1928.85" cy="427.3591" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="1937.85" y="430.7057">String getName()</text></g><!--class MeanSquaredError--><g class="entity" data-entity="MeanSquaredError" data-source-line="175" data-uid="ent0026" id="entity_MeanSquaredError"><rect fill="#313139" height="113.1875" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="548.3066" x="2500.85" y="324.82"/><ellipse cx="2705.101" cy="340.82" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M2708.0697,346.4606 Q2707.4916,346.7575 2706.851,346.8981 Q2706.2104,347.0544 2705.5072,347.0544 Q2703.0072,347.0544 2701.6791,345.4138 Q2700.3666,343.7575 2700.3666,340.6325 Q2700.3666,337.5075 2701.6791,335.8513 Q2703.0072,334.195 2705.5072,334.195 Q2706.2104,334.195 2706.851,334.3513 Q2707.5072,334.5075 2708.0697,334.8044 L2708.0697,337.5231 Q2707.4447,336.945 2706.851,336.6794 Q2706.2572,336.3981 2705.6322,336.3981 Q2704.2885,336.3981 2703.601,337.4763 Q2702.9135,338.5388 2702.9135,340.6325 Q2702.9135,342.7263 2703.601,343.8044 Q2704.2885,344.8669 2705.6322,344.8669 Q2706.2572,344.8669 2706.851,344.6013 Q2707.4447,344.32 2708.0697,343.7419 L2708.0697,346.4606 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131.3047" x="2725.601" y="345.6667">MeanSquaredError</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="2501.85" x2="3048.1566" y1="356.82" y2="356.82"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="2501.85" x2="3048.1566" y1="364.82" y2="364.82"/><ellipse cx="2511.85" cy="378.4684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380.5771" x="2520.85" y="381.8151">double calculateCost(double predicted, double actual)</text><ellipse cx="2511.85" cy="394.7653" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="522.3066" x="2520.85" y="398.112">double calculateGradient(double predicted, double actual, double feature)</text><ellipse cx="2511.85" cy="411.0622" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439.7559" x="2520.85" y="414.4089">double calculateBiasGradient(double predicted, double actual)</text><ellipse cx="2511.85" cy="427.3591" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="2520.85" y="430.7057">String getName()</text></g><!--class CostFunction--><g class="entity" data-entity="CostFunction" data-source-line="183" data-uid="ent0028" id="entity_CostFunction"><rect fill="#313139" height="113.1875" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="548.3066" x="2754.85" y="787.9"/><ellipse cx="2979.0346" cy="803.9" fill="#352866" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M2974.9564,799.6656 L2974.9564,797.5094 L2982.3471,797.5094 L2982.3471,799.6656 L2979.8783,799.6656 L2979.8783,807.7438 L2982.3471,807.7438 L2982.3471,809.9 L2974.9564,809.9 L2974.9564,807.7438 L2977.4252,807.7438 L2977.4252,799.6656 L2974.9564,799.6656 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="91.4375" x="2999.5346" y="808.7467">CostFunction</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="2755.85" x2="3302.1566" y1="819.9" y2="819.9"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="2755.85" x2="3302.1566" y1="827.9" y2="827.9"/><ellipse cx="2765.85" cy="841.5484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380.5771" x="2774.85" y="844.8951">double calculateCost(double predicted, double actual)</text><ellipse cx="2765.85" cy="857.8453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="522.3066" x="2774.85" y="861.192">double calculateGradient(double predicted, double actual, double feature)</text><ellipse cx="2765.85" cy="874.1422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439.7559" x="2774.85" y="877.4889">double calculateBiasGradient(double predicted, double actual)</text><ellipse cx="2765.85" cy="890.4391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="2774.85" y="893.7857">String getName()</text></g><!--class Optimizer--><g class="entity" data-entity="Optimizer" data-source-line="189" data-uid="ent0029" id="entity_Optimizer"><rect fill="#313139" height="113.1875" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="583.8945" x="3338.05" y="787.9"/><ellipse cx="3591.4821" cy="803.9" fill="#352866" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M3587.404,799.6656 L3587.404,797.5094 L3594.7946,797.5094 L3594.7946,799.6656 L3592.3259,799.6656 L3592.3259,807.7438 L3594.7946,807.7438 L3594.7946,809.9 L3587.404,809.9 L3587.404,807.7438 L3589.8728,807.7438 L3589.8728,799.6656 L3587.404,799.6656 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="68.5303" x="3611.9821" y="808.7467">Optimizer</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="3339.05" x2="3920.9445" y1="819.9" y2="819.9"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="3339.05" x2="3920.9445" y1="827.9" y2="827.9"/><ellipse cx="3349.05" cy="841.5484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.8945" x="3358.05" y="844.8951">void updateWeights(double[] weights, double[] gradients, double learningRate)</text><ellipse cx="3349.05" cy="857.8453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516.9199" x="3358.05" y="861.192">void updateBias(double[] bias, double biasGradient, double learningRate)</text><ellipse cx="3349.05" cy="874.1422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196.123" x="3358.05" y="877.4889">void reset(int numFeatures)</text><ellipse cx="3349.05" cy="890.4391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="3358.05" y="893.7857">String getName()</text></g><!--class AdagradOptimizer--><g class="entity" data-entity="AdagradOptimizer" data-source-line="197" data-uid="ent0031" id="entity_AdagradOptimizer"><rect fill="#313139" height="194.6719" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="583.8945" x="3105.05" y="284.08"/><ellipse cx="3328.9064" cy="300.08" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M3331.8752,305.7206 Q3331.2971,306.0175 3330.6564,306.1581 Q3330.0158,306.3144 3329.3127,306.3144 Q3326.8127,306.3144 3325.4846,304.6738 Q3324.1721,303.0175 3324.1721,299.8925 Q3324.1721,296.7675 3325.4846,295.1113 Q3326.8127,293.455 3329.3127,293.455 Q3330.0158,293.455 3330.6564,293.6113 Q3331.3127,293.7675 3331.8752,294.0644 L3331.8752,296.7831 Q3331.2502,296.205 3330.6564,295.9394 Q3330.0627,295.6581 3329.4377,295.6581 Q3328.0939,295.6581 3327.4064,296.7363 Q3326.7189,297.7988 3326.7189,299.8925 Q3326.7189,301.9863 3327.4064,303.0644 Q3328.0939,304.1269 3329.4377,304.1269 Q3330.0627,304.1269 3330.6564,303.8613 Q3331.2502,303.58 3331.8752,303.0019 L3331.8752,305.7206 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127.6816" x="3349.4064" y="304.9267">AdagradOptimizer</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="3106.05" x2="3687.9445" y1="316.08" y2="316.08"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3113.05" y="326.7284"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102.1768" x="3125.05" y="333.0751">double epsilon</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3113.05" y="343.0253"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73.9375" x="3125.05" y="349.372">double[] G</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3113.05" y="359.3222"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92.3809" x="3125.05" y="365.6689">double GBias</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="3106.05" x2="3687.9445" y1="372.9706" y2="372.9706"/><ellipse cx="3116.05" cy="386.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="240.7822" x="3125.05" y="389.9657">AdagradOptimizer(double epsilon)</text><ellipse cx="3116.05" cy="402.9159" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138.6055" x="3125.05" y="406.2626">AdagradOptimizer()</text><ellipse cx="3116.05" cy="419.2128" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.8945" x="3125.05" y="422.5595">void updateWeights(double[] weights, double[] gradients, double learningRate)</text><ellipse cx="3116.05" cy="435.5097" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516.9199" x="3125.05" y="438.8564">void updateBias(double[] bias, double biasGradient, double learningRate)</text><ellipse cx="3116.05" cy="451.8066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196.123" x="3125.05" y="455.1532">void reset(int numFeatures)</text><ellipse cx="3116.05" cy="468.1034" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="3125.05" y="471.4501">String getName()</text></g><!--class AdamOptimizer--><g class="entity" data-entity="AdamOptimizer" data-source-line="208" data-uid="ent0032" id="entity_AdamOptimizer"><rect fill="#313139" height="276.1563" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="583.8945" x="3724.05" y="243.33"/><ellipse cx="3957.1418" cy="259.33" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M3960.1105,264.9706 Q3959.5324,265.2675 3958.8918,265.4081 Q3958.2512,265.5644 3957.548,265.5644 Q3955.048,265.5644 3953.7199,263.9238 Q3952.4074,262.2675 3952.4074,259.1425 Q3952.4074,256.0175 3953.7199,254.3613 Q3955.048,252.705 3957.548,252.705 Q3958.2512,252.705 3958.8918,252.8613 Q3959.548,253.0175 3960.1105,253.3144 L3960.1105,256.0331 Q3959.4855,255.455 3958.8918,255.1894 Q3958.298,254.9081 3957.673,254.9081 Q3956.3293,254.9081 3955.6418,255.9863 Q3954.9543,257.0488 3954.9543,259.1425 Q3954.9543,261.2363 3955.6418,262.3144 Q3956.3293,263.3769 3957.673,263.3769 Q3958.298,263.3769 3958.8918,263.1113 Q3959.4855,262.83 3960.1105,262.2519 L3960.1105,264.9706 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109.2109" x="3977.6418" y="264.1767">AdamOptimizer</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="3725.05" x2="4306.9445" y1="275.33" y2="275.33"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3732.05" y="285.9784"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92.6406" x="3744.05" y="292.3251">double beta1</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3732.05" y="302.2753"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92.6406" x="3744.05" y="308.622">double beta2</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3732.05" y="318.5722"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102.1768" x="3744.05" y="324.9189">double epsilon</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3732.05" y="334.8691"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76.7266" x="3744.05" y="341.2157">double[] m</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3732.05" y="351.1659"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71.374" x="3744.05" y="357.5126">double[] v</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3732.05" y="367.4628"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95.1699" x="3744.05" y="373.8095">double mBias</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3732.05" y="383.7597"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89.8174" x="3744.05" y="390.1064">double vBias</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="3732.05" y="400.0566"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28.1914" x="3744.05" y="406.4032">int t</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="3725.05" x2="4306.9445" y1="413.705" y2="413.705"/><ellipse cx="3735.05" cy="427.3534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="425.3936" x="3744.05" y="430.7001">AdamOptimizer(double beta1, double beta2, double epsilon)</text><ellipse cx="3735.05" cy="443.6503" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120.1348" x="3744.05" y="446.997">AdamOptimizer()</text><ellipse cx="3735.05" cy="459.9472" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.8945" x="3744.05" y="463.2939">void updateWeights(double[] weights, double[] gradients, double learningRate)</text><ellipse cx="3735.05" cy="476.2441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516.9199" x="3744.05" y="479.5907">void updateBias(double[] bias, double biasGradient, double learningRate)</text><ellipse cx="3735.05" cy="492.5409" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196.123" x="3744.05" y="495.8876">void reset(int numFeatures)</text><ellipse cx="3735.05" cy="508.8378" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="3744.05" y="512.1845">String getName()</text></g><!--class BatchGradientDescent--><g class="entity" data-entity="BatchGradientDescent" data-source-line="224" data-uid="ent0033" id="entity_BatchGradientDescent"><rect fill="#313139" height="113.1875" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="583.8945" x="4343.05" y="324.82"/><ellipse cx="4551.4777" cy="340.82" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M4554.4465,346.4606 Q4553.8684,346.7575 4553.2277,346.8981 Q4552.5871,347.0544 4551.884,347.0544 Q4549.384,347.0544 4548.0559,345.4138 Q4546.7434,343.7575 4546.7434,340.6325 Q4546.7434,337.5075 4548.0559,335.8513 Q4549.384,334.195 4551.884,334.195 Q4552.5871,334.195 4553.2277,334.3513 Q4553.884,334.5075 4554.4465,334.8044 L4554.4465,337.5231 Q4553.8215,336.945 4553.2277,336.6794 Q4552.634,336.3981 4552.009,336.3981 Q4550.6652,336.3981 4549.9777,337.4763 Q4549.2902,338.5388 4549.2902,340.6325 Q4549.2902,342.7263 4549.9777,343.8044 Q4550.6652,344.8669 4552.009,344.8669 Q4552.634,344.8669 4553.2277,344.6013 Q4553.8215,344.32 4554.4465,343.7419 L4554.4465,346.4606 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158.5391" x="4571.9777" y="345.6667">BatchGradientDescent</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="4344.05" x2="4925.9445" y1="356.82" y2="356.82"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="4344.05" x2="4925.9445" y1="364.82" y2="364.82"/><ellipse cx="4354.05" cy="378.4684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.8945" x="4363.05" y="381.8151">void updateWeights(double[] weights, double[] gradients, double learningRate)</text><ellipse cx="4354.05" cy="394.7653" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516.9199" x="4363.05" y="398.112">void updateBias(double[] bias, double biasGradient, double learningRate)</text><ellipse cx="4354.05" cy="411.0622" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196.123" x="4363.05" y="414.4089">void reset(int numFeatures)</text><ellipse cx="4354.05" cy="427.3591" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="4363.05" y="430.7057">String getName()</text></g><!--class MiniBatchGradientDescent--><g class="entity" data-entity="MiniBatchGradientDescent" data-source-line="230" data-uid="ent0034" id="entity_MiniBatchGradientDescent"><rect fill="#313139" height="178.375" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="583.8945" x="4962.05" y="292.22"/><ellipse cx="5156.112" cy="308.22" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M5159.0808,313.8606 Q5158.5026,314.1575 5157.862,314.2981 Q5157.2214,314.4544 5156.5183,314.4544 Q5154.0183,314.4544 5152.6901,312.8138 Q5151.3776,311.1575 5151.3776,308.0325 Q5151.3776,304.9075 5152.6901,303.2513 Q5154.0183,301.595 5156.5183,301.595 Q5157.2214,301.595 5157.862,301.7513 Q5158.5183,301.9075 5159.0808,302.2044 L5159.0808,304.9231 Q5158.4558,304.345 5157.862,304.0794 Q5157.2683,303.7981 5156.6433,303.7981 Q5155.2995,303.7981 5154.612,304.8763 Q5153.9245,305.9388 5153.9245,308.0325 Q5153.9245,310.1263 5154.612,311.2044 Q5155.2995,312.2669 5156.6433,312.2669 Q5157.2683,312.2669 5157.862,312.0013 Q5158.4558,311.72 5159.0808,311.1419 L5159.0808,313.8606 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187.2705" x="5176.612" y="313.0667">MiniBatchGradientDescent</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="4963.05" x2="5544.9445" y1="324.22" y2="324.22"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="4970.05" y="334.8684"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90.9658" x="4982.05" y="341.2151">int batchSize</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="4963.05" x2="5544.9445" y1="348.5169" y2="348.5169"/><ellipse cx="4973.05" cy="362.1653" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289.1602" x="4982.05" y="365.512">MiniBatchGradientDescent(int batchSize)</text><ellipse cx="4973.05" cy="378.4622" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198.1943" x="4982.05" y="381.8089">MiniBatchGradientDescent()</text><ellipse cx="4973.05" cy="394.7591" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.8945" x="4982.05" y="398.1057">void updateWeights(double[] weights, double[] gradients, double learningRate)</text><ellipse cx="4973.05" cy="411.0559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516.9199" x="4982.05" y="414.4026">void updateBias(double[] bias, double biasGradient, double learningRate)</text><ellipse cx="4973.05" cy="427.3528" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196.123" x="4982.05" y="430.6995">void reset(int numFeatures)</text><ellipse cx="4973.05" cy="443.6497" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="4982.05" y="446.9964">String getName()</text><ellipse cx="4973.05" cy="459.9466" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125.5967" x="4982.05" y="463.2932">int getBatchSize()</text></g><!--class MomentumOptimizer--><g class="entity" data-entity="MomentumOptimizer" data-source-line="240" data-uid="ent0035" id="entity_MomentumOptimizer"><rect fill="#313139" height="194.6719" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="583.8945" x="5581.05" y="284.08"/><ellipse cx="5794.5979" cy="300.08" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M5797.5666,305.7206 Q5796.9885,306.0175 5796.3479,306.1581 Q5795.7072,306.3144 5795.0041,306.3144 Q5792.5041,306.3144 5791.176,304.6738 Q5789.8635,303.0175 5789.8635,299.8925 Q5789.8635,296.7675 5791.176,295.1113 Q5792.5041,293.455 5795.0041,293.455 Q5795.7072,293.455 5796.3479,293.6113 Q5797.0041,293.7675 5797.5666,294.0644 L5797.5666,296.7831 Q5796.9416,296.205 5796.3479,295.9394 Q5795.7541,295.6581 5795.1291,295.6581 Q5793.7854,295.6581 5793.0979,296.7363 Q5792.4104,297.7988 5792.4104,299.8925 Q5792.4104,301.9863 5793.0979,303.0644 Q5793.7854,304.1269 5795.1291,304.1269 Q5795.7541,304.1269 5796.3479,303.8613 Q5796.9416,303.58 5797.5666,303.0019 L5797.5666,305.7206 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148.2988" x="5815.0979" y="304.9267">MomentumOptimizer</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="5582.05" x2="6163.9445" y1="316.08" y2="316.08"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5589.05" y="326.7284"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133.4922" x="5601.05" y="333.0751">double momentum</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5589.05" y="343.0253"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174.6924" x="5601.05" y="349.372">double[] velocityWeights</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="5589.05" y="359.3222"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136.2471" x="5601.05" y="365.6689">double velocityBias</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="5582.05" x2="6163.9445" y1="372.9706" y2="372.9706"/><ellipse cx="5592.05" cy="386.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292.7148" x="5601.05" y="389.9657">MomentumOptimizer(double momentum)</text><ellipse cx="5592.05" cy="402.9159" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159.2227" x="5601.05" y="406.2626">MomentumOptimizer()</text><ellipse cx="5592.05" cy="419.2128" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.8945" x="5601.05" y="422.5595">void updateWeights(double[] weights, double[] gradients, double learningRate)</text><ellipse cx="5592.05" cy="435.5097" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516.9199" x="5601.05" y="438.8564">void updateBias(double[] bias, double biasGradient, double learningRate)</text><ellipse cx="5592.05" cy="451.8066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196.123" x="5601.05" y="455.1532">void reset(int numFeatures)</text><ellipse cx="5592.05" cy="468.1034" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="5601.05" y="471.4501">String getName()</text></g><!--class RMSPropOptimizer--><g class="entity" data-entity="RMSPropOptimizer" data-source-line="251" data-uid="ent0036" id="entity_RMSPropOptimizer"><rect fill="#313139" height="210.9688" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="583.8945" x="6200.05" y="275.93"/><ellipse cx="6422.3103" cy="291.93" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M6425.279,297.5706 Q6424.7009,297.8675 6424.0603,298.0081 Q6423.4196,298.1644 6422.7165,298.1644 Q6420.2165,298.1644 6418.8884,296.5238 Q6417.5759,294.8675 6417.5759,291.7425 Q6417.5759,288.6175 6418.8884,286.9613 Q6420.2165,285.305 6422.7165,285.305 Q6423.4196,285.305 6424.0603,285.4613 Q6424.7165,285.6175 6425.279,285.9144 L6425.279,288.6331 Q6424.654,288.055 6424.0603,287.7894 Q6423.4665,287.5081 6422.8415,287.5081 Q6421.4978,287.5081 6420.8103,288.5863 Q6420.1228,289.6488 6420.1228,291.7425 Q6420.1228,293.8363 6420.8103,294.9144 Q6421.4978,295.9769 6422.8415,295.9769 Q6423.4665,295.9769 6424.0603,295.7113 Q6424.654,295.43 6425.279,294.8519 L6425.279,297.5706 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130.874" x="6442.8103" y="296.7767">RMSPropOptimizer</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="6201.05" x2="6782.9445" y1="307.93" y2="307.93"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6208.05" y="318.5784"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83.7334" x="6220.05" y="324.9251">double beta</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6208.05" y="334.8753"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102.1768" x="6220.05" y="341.222">double epsilon</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6208.05" y="351.1722"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71.374" x="6220.05" y="357.5189">double[] v</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1;" width="6" x="6208.05" y="367.4691"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89.8174" x="6220.05" y="373.8157">double vBias</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="6201.05" x2="6782.9445" y1="381.1175" y2="381.1175"/><ellipse cx="6211.05" cy="394.7659" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336.6084" x="6220.05" y="398.1126">RMSPropOptimizer(double beta, double epsilon)</text><ellipse cx="6211.05" cy="411.0628" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141.7979" x="6220.05" y="414.4095">RMSPropOptimizer()</text><ellipse cx="6211.05" cy="427.3597" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557.8945" x="6220.05" y="430.7064">void updateWeights(double[] weights, double[] gradients, double learningRate)</text><ellipse cx="6211.05" cy="443.6566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="516.9199" x="6220.05" y="447.0032">void updateBias(double[] bias, double biasGradient, double learningRate)</text><ellipse cx="6211.05" cy="459.9534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196.123" x="6220.05" y="463.3001">void reset(int numFeatures)</text><ellipse cx="6211.05" cy="476.2503" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.4473" x="6220.05" y="479.597">String getName()</text></g><!--class Mathutils--><g class="entity" data-entity="Mathutils" data-source-line="272" data-uid="ent0044" id="entity_Mathutils"><rect fill="#313139" height="194.6719" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="388.8447" x="8685.58" y="284.08"/><ellipse cx="8843.5243" cy="300.08" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M8846.4931,305.7206 Q8845.915,306.0175 8845.2743,306.1581 Q8844.6337,306.3144 8843.9306,306.3144 Q8841.4306,306.3144 8840.1025,304.6738 Q8838.79,303.0175 8838.79,299.8925 Q8838.79,296.7675 8840.1025,295.1113 Q8841.4306,293.455 8843.9306,293.455 Q8844.6337,293.455 8845.2743,293.6113 Q8845.9306,293.7675 8846.4931,294.0644 L8846.4931,296.7831 Q8845.8681,296.205 8845.2743,295.9394 Q8844.6806,295.6581 8844.0556,295.6581 Q8842.7118,295.6581 8842.0243,296.7363 Q8841.3368,297.7988 8841.3368,299.8925 Q8841.3368,301.9863 8842.0243,303.0644 Q8842.7118,304.1269 8844.0556,304.1269 Q8844.6806,304.1269 8845.2743,303.8613 Q8845.8681,303.58 8846.4931,303.0019 L8846.4931,305.7206 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64.4561" x="8864.0243" y="304.9267">Mathutils</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="8686.58" x2="9073.4247" y1="316.08" y2="316.08"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="8686.58" x2="9073.4247" y1="324.08" y2="324.08"/><ellipse cx="8696.58" cy="337.7284" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231.7246" x="8705.58" y="341.0751">double mean_cal(double[] nums)</text><ellipse cx="8696.58" cy="354.0253" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172.7988" x="8705.58" y="357.372">int mean_cal(int[] nums)</text><ellipse cx="8696.58" cy="370.3222" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266.7725" x="8705.58" y="373.6689">double power(double base, int power)</text><ellipse cx="8696.58" cy="386.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174.0635" x="8705.58" y="389.9657">double sqrt(double num)</text><ellipse cx="8696.58" cy="402.9159" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252.2939" x="8705.58" y="406.2626">double variance_cal(double[] nums)</text><ellipse cx="8696.58" cy="419.2128" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219.3105" x="8705.58" y="422.5595">double std_dev(double[] nums)</text><ellipse cx="8696.58" cy="435.5097" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="362.8447" x="8705.58" y="438.8564">double dot_product(double[] num1, double[] num2)</text><ellipse cx="8696.58" cy="451.8066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="256.0059" x="8705.58" y="455.1532">double[][] transpose(double[][] mat)</text><ellipse cx="8696.58" cy="468.1034" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194.6807" x="8705.58" y="471.4501">int[] cumulative(int[] nums)</text></g><!--class MatrixOperations--><g class="entity" data-entity="MatrixOperations" data-source-line="283" data-uid="ent0045" id="entity_MatrixOperations"><rect fill="#313139" height="48" rx="2.5" ry="2.5" style="stroke:#E7E7E7;stroke-width:0.5;" width="153.0439" x="9109.48" y="357.41"/><ellipse cx="9124.48" cy="373.41" fill="#2E5233" rx="11" ry="11" style="stroke:#E7E7E7;stroke-width:1;"/><path d="M9127.4488,379.0506 Q9126.8706,379.3475 9126.23,379.4881 Q9125.5894,379.6444 9124.8863,379.6444 Q9122.3863,379.6444 9121.0581,378.0038 Q9119.7456,376.3475 9119.7456,373.2225 Q9119.7456,370.0975 9121.0581,368.4413 Q9122.3863,366.785 9124.8863,366.785 Q9125.5894,366.785 9126.23,366.9413 Q9126.8863,367.0975 9127.4488,367.3944 L9127.4488,370.1131 Q9126.8238,369.535 9126.23,369.2694 Q9125.6363,368.9881 9125.0113,368.9881 Q9123.6675,368.9881 9122.98,370.0663 Q9122.2925,371.1288 9122.2925,373.2225 Q9122.2925,375.3163 9122.98,376.3944 Q9123.6675,377.4569 9125.0113,377.4569 Q9125.6363,377.4569 9126.23,377.1913 Q9126.8238,376.91 9127.4488,376.3319 L9127.4488,379.0506 Z " fill="#FFFFFF"/><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121.0439" x="9138.48" y="378.2567">MatrixOperations</text><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="9110.48" x2="9261.5239" y1="389.41" y2="389.41"/><line style="stroke:#E7E7E7;stroke-width:0.5;" x1="9110.48" x2="9261.5239" y1="397.41" y2="397.41"/></g><!--link RandomForestClassifier to DecisionTreeClassifier--><g class="link" data-entity-1="RandomForestClassifier" data-entity-2="DecisionTreeClassifier" data-source-line="36" data-uid="lnk9" id="link_RandomForestClassifier_DecisionTreeClassifier"><path codeLine="36" d="M383,503.56 C383,576.67 383,662.88 383,732.82" fill="none" id="RandomForestClassifier-to-DecisionTreeClassifier" style="stroke:#E7E7E7;stroke-width:1;"/><polygon fill="#E7E7E7" points="383,738.82,387,729.82,383,733.82,379,729.82,383,738.82" style="stroke:#E7E7E7;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29.7832" x="384" y="635.8969">uses</text></g><!--reverse link DecisionTreeRegressor to Node--><g class="link" data-entity-1="DecisionTreeRegressor" data-entity-2="Node" data-source-line="89" data-uid="lnk14" id="link_DecisionTreeRegressor_Node"><path codeLine="89" d="M7840.2038,588.8033 C7834.2838,592.1633 7838.84,589.56 7833,592.83 C7732.68,649.03 7618.49,708.16 7526.02,754.87" fill="none" id="DecisionTreeRegressor-backto-Node" style="stroke:#E7E7E7;stroke-width:1;"/><polygon fill="#E7E7E7" points="7850.64,582.88,7843.4475,582.3629,7840.2038,588.8033,7847.3963,589.3204,7850.64,582.88" style="stroke:#E7E7E7;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="26.3491" x="7768" y="635.8969">root</text><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8.271" x="7834.83" y="584.4945">1</text><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8.271" x="7531.9778" y="744.2023">1</text></g><!--reverse link DecisionTreeRegressor to SplitResult--><g class="link" data-entity-1="DecisionTreeRegressor" data-entity-2="SplitResult" data-source-line="90" data-uid="lnk15" id="link_DecisionTreeRegressor_SplitResult"><path codeLine="90" d="M8148.1488,604.9288 C8139.4988,665.3288 8132.3,715.68 8125.52,763.01" fill="none" id="DecisionTreeRegressor-backto-SplitResult" style="stroke:#E7E7E7;stroke-width:1;"/><polygon fill="none" points="8149.85,593.05,8145.0398,598.4223,8148.1488,604.9288,8152.959,599.5565,8149.85,593.05" style="stroke:#E7E7E7;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29.7832" x="8146" y="635.8969">uses</text><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8.271" x="8140.6276" y="612.9945">1</text><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8.271" x="8118.1778" y="752.4351">1</text></g><!--reverse link Node to Node--><g class="link" data-entity-1="Node" data-entity-2="Node" data-source-line="91" data-uid="lnk16" id="link_Node_Node"><path codeLine="91" d="M7584.8275,830.3236 C7605.9875,833.6136 7607.49,837.11 7607.49,844.5 C7607.49,851.89 7594.13,857.23 7572.97,860.52" fill="none" id="Node-backto-Node" style="stroke:#E7E7E7;stroke-width:1;"/><polygon fill="#E7E7E7" points="7572.97,828.48,7578.2842,833.3543,7584.8275,830.3236,7579.5133,825.4493,7572.97,828.48" style="stroke:#E7E7E7;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21.2837" x="7613.49" y="849.0669">left</text><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8.271" x="7580.5204" y="824.7774">1</text><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="24.8066" x="7580.7917" y="857.8687">0..1</text></g><!--reverse link Node to Node--><g class="link" data-entity-1="Node" data-entity-2="Node" data-source-line="92" data-uid="lnk17" id="link_Node_Node"><path codeLine="92" d="M7584.6883,808.1582 C7625.6883,812.9682 7642.49,824.15 7642.49,844.5 C7642.49,864.85 7613.77,877.43 7572.77,882.24" fill="none" id="Node-backto-Node-1" style="stroke:#E7E7E7;stroke-width:1;"/><polygon fill="#E7E7E7" points="7572.77,806.76,7578.2631,811.4319,7584.6883,808.1582,7579.1952,803.4864,7572.77,806.76" style="stroke:#E7E7E7;stroke-width:1;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="30.5449" x="7648.49" y="849.0669">right</text><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8.271" x="7580.3138" y="802.3447">1</text><text fill="#FFFFFF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="24.8066" x="7580.5851" y="880.3014">0..1</text></g><!--link AdagradOptimizer to Optimizer--><g class="link" data-entity-1="AdagradOptimizer" data-entity-2="Optimizer" data-source-line="264" data-uid="lnk37" id="link_AdagradOptimizer_Optimizer"><path codeLine="264" d="M3445.84,479.07 C3493.08,572.55 3554.9105,694.9153 3593.5905,771.4453" fill="none" id="AdagradOptimizer-to-Optimizer" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="3601.71,787.51,3598.9454,768.7388,3588.2356,774.1518,3601.71,787.51" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link AdamOptimizer to Optimizer--><g class="link" data-entity-1="AdamOptimizer" data-entity-2="Optimizer" data-source-line="265" data-uid="lnk38" id="link_AdamOptimizer_Optimizer"><path codeLine="265" d="M3900.97,519.82 C3825.98,609.39 3743.6635,707.7172 3688.3935,773.7472" fill="none" id="AdamOptimizer-to-Optimizer" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="3676.84,787.55,3692.9944,777.5984,3683.7926,769.8961,3676.84,787.55" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link BatchGradientDescent to Optimizer--><g class="link" data-entity-1="BatchGradientDescent" data-entity-2="Optimizer" data-source-line="266" data-uid="lnk39" id="link_BatchGradientDescent_Optimizer"><path codeLine="266" d="M4569.76,438.42 C4510,486.74 4417.07,554.61 4325,592.83 C4158.2,662.07 4094.99,606.1 3926,669.83 C3847.53,699.42 3780.8221,738.9483 3723.2021,777.5683" fill="none" id="BatchGradientDescent-to-Optimizer" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="3708.25,787.59,3726.5427,782.5523,3719.8615,772.5843,3708.25,787.59" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link MiniBatchGradientDescent to Optimizer--><g class="link" data-entity-1="MiniBatchGradientDescent" data-entity-2="Optimizer" data-source-line="267" data-uid="lnk40" id="link_MiniBatchGradientDescent_Optimizer"><path codeLine="267" d="M5152.82,471.07 C5095.56,515.84 5020.3,566.19 4944,592.83 C4836.91,630.22 4034.27,635.97 3926,669.83 C3844.11,695.43 3775.4052,736.8136 3718.0852,777.1936" fill="none" id="MiniBatchGradientDescent-to-Optimizer" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="3703.37,787.56,3721.5407,782.0987,3714.6298,772.2885,3703.37,787.56" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link MomentumOptimizer to Optimizer--><g class="link" data-entity-1="MomentumOptimizer" data-entity-2="Optimizer" data-source-line="268" data-uid="lnk41" id="link_MomentumOptimizer_Optimizer"><path codeLine="268" d="M5763,479.04 C5707.07,522.16 5635.66,568.61 5563,592.83 C5476.62,621.61 4013.27,643.9 3926,669.83 C3843.33,694.39 3774.1631,736.2459 3716.9331,777.0759" fill="none" id="MomentumOptimizer-to-Optimizer" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="3702.28,787.53,3720.4178,781.9603,3713.4484,772.1916,3702.28,787.53" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link RMSPropOptimizer to Optimizer--><g class="link" data-entity-1="RMSPropOptimizer" data-entity-2="Optimizer" data-source-line="269" data-uid="lnk42" id="link_RMSPropOptimizer_Optimizer"><path codeLine="269" d="M6372,487.19 C6317.74,528.1 6250.49,570.49 6182,592.83 C6152.19,602.55 3956.11,661.09 3926,669.83 C3843.03,693.9 3773.7175,735.9302 3716.5175,776.9502" fill="none" id="RMSPropOptimizer-to-Optimizer" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="3701.89,787.44,3720.0141,781.826,3713.0209,772.0743,3701.89,787.44" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link HuberLoss to CostFunction--><g class="link" data-entity-1="HuberLoss" data-entity-2="CostFunction" data-source-line="286" data-uid="lnk46" id="link_HuberLoss_CostFunction"><path codeLine="286" d="M1113.2,462.73 C1167.76,508.34 1241.76,562.28 1317,592.83 C1572.01,696.38 2321.2498,778.4273 2736.6698,817.6673" fill="none" id="HuberLoss-to-CostFunction" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="2754.59,819.36,2737.234,811.6939,2736.1055,823.6407,2754.59,819.36" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link LogCoshLoss to CostFunction--><g class="link" data-entity-1="LogCoshLoss" data-entity-2="CostFunction" data-source-line="287" data-uid="lnk47" id="link_LogCoshLoss_CostFunction"><path codeLine="287" d="M1670.43,438.44 C1726.33,486.43 1813.13,553.8 1900,592.83 C2176.55,717.08 2501.8181,779.506 2736.7481,811.836" fill="none" id="LogCoshLoss-to-CostFunction" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="2754.58,814.29,2737.566,805.8921,2735.9301,817.78,2754.58,814.29" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link MeanAbsoluteError to CostFunction--><g class="link" data-entity-1="MeanAbsoluteError" data-entity-2="CostFunction" data-source-line="288" data-uid="lnk48" id="link_MeanAbsoluteError_CostFunction"><path codeLine="288" d="M2261.12,438.33 C2318.5,483.26 2403.31,546.32 2483,592.83 C2614.98,669.84 2758.0813,733.9091 2870.5813,780.5291" fill="none" id="MeanAbsoluteError-to-CostFunction" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="2887.21,787.42,2872.8782,774.9861,2868.2843,786.072,2887.21,787.42" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--link MeanSquaredError to CostFunction--><g class="link" data-entity-1="MeanSquaredError" data-entity-2="CostFunction" data-source-line="289" data-uid="lnk49" id="link_MeanSquaredError_CostFunction"><path codeLine="289" d="M2805.89,438.49 C2854.74,527.17 2940.5936,683.0247 2989.4436,771.6847" fill="none" id="MeanSquaredError-to-CostFunction" style="stroke:#E7E7E7;stroke-width:1;stroke-dasharray:7,7;"/><polygon fill="none" points="2998.13,787.45,2994.6987,768.7892,2984.1885,774.5801,2998.13,787.45" style="stroke:#E7E7E7;stroke-width:1;"/></g><!--SRC=[xLfVRzis47_tfn3oCdcHZRMFHH6WQPPiGz8CJe4EA0g3bcYRcoIg9EKww_BTH-eFHL97sKxcXo79GoIJTyVZtU_kUBGB5F-5LZWuYId3KvIkA2DYdV4fBmlCDeJZv2JuFWhaNvmYpeEFc8lHmwZOpJUj6CYIn4WGcjjYBd1Ck1pzo31-tz1Xrf2elqb0SX5aQ9lWGgpTOP9pb1KfvaLAX37vWIOuO9GQOnFzUkfPDJHNYe05neQ83IL9i2GYJ6YvIF7dBv-_17zKJFBbtgHKSWg64n9tnC7MeP13BeqIwCfPON6Xj0lDYJl1IBvISse_lt6QMzDSIBl7Fail6SqgbXjKlAqbHS7juaySYxD0DF9gSGyZmt4pb2SqkvHUvsB0SNcPAI7yYVwy9boyXNTGQsakKAiMCFc0tG_h7fhwHi7_0WmVoco1sUrIcOHxG57lqmSBZnyrB2hB6zXee74MBBLO2nq_13ESLe7ErwHuuvDVSkmB_agCXsqoEVC1-KqbSy-KnF1AIkQ3wMXMqz2ZPADMpYL6ecHU-7fobbRje9JrE0cHgsfaQZWs58VbwysFHpiYPXi5EYIieAb7svYOC_hD4pjw50YVxP5oQGSJA9NsCwcBYqL9qaHDUqrHUw1oa6dknYg2eGrc7DU6pkK_WtThCjmfTyumBrCXJPyd2nbRbOkTj0KvGI-NyKvHcy2ogLR6Kg0shXh-I2jBWMIDaVNSvO1TrRodGbNyRkWkQn2JP0jOSYqTkQPfuheenSj-E9FLMlHbR51QOcDuGMcAKHuGBXzBCmAKbD3a6hkJjhvHJyseqouob09CONh-gHOniU8Onfo2xQCmus4AxciMCnWxjVSmXgjOvAmPzVMBtDKjsy5HVlBg9FXnCgcUbT7VTAdTpq4R3jCJJSLIZ9KWBVcdwRGJhiqrGDCPk_Rthxd03CM2RB0wfni-rociIi0P8dbOHvGq0M8h3iJXUyh5PPd7ggO7CPC-mEPGvPbuJKai4yzTZF9S5cDUFm5fjuKW6VbRqjIYzEVTSXwC7LwJ72CsqsNSWdM33HbnB9TRcpEvZeDwND1upI4OViFAcFsfO44GXy-JhZ8Xf41ah5k_v_uQTviRMLRMkmiaq52XcwCqDRCuoOjIp1EGAy2CKJQFaOV320fQ2aXEZHsQaEMzKOXrJDxlEXeVifQUbwNbK-sQ4DYJd3sN_WdxIBcXIPaYTWXWPaV0YnD6nWU3fWiEshx11qEQmKZqR3O4DWZWiSowCvvNtGZIyhz3yZi0o31F814SozqA_BC2DCZLmzS516K8ddjnFmgSniAyOtFn1D5MGWnqZI4GJFIUpf68ru_PM2VYXkJaKM8UF5S5_gRgM3S5UiKdNXJO7TDZxWac7daxLTxZgk68ZTFnxns05kg0QuT3E_wfcStizl-NKkxgciete3eaE1K8nedc2qtQCKWnbCXKqWrjfs5ziWtaWQv4wH3_5KC9mVbE6VfZSw8UagcIphvoOI1yG1a62lCrNSdzhXrpFtEZtCXcyTs2qxHiojgBQKpJt7qjaPJrOfd7v3sYki8bYZ5livuUiOzxBv0pBDETTh-xPRWiPBU2VISueoYl6kNqc7KI7yDoZTEU5A7EUv7PMhGRta-an00MeNFAFmR8T4jWLzPt2L96W8of2omkE4cjVaZl_gfFVNLkzbUdlHL2M-fuY7Jy33rh-IORTCm22_GA7dvza1ipQ703N3AVsxrpUqtg3AjD2zklMS__bVAHfNCK368ZUm563OogysiNlS0ybezdcGMDGqZR4FlDKkDoeOZk98ZCsnaFSsWnZFVXU7x0jFhFyzPOu8LV9bKfXrDQrX212GcdD2RY_fFlPgybS2fGR-7GMMmyIFoySytivkvtHekTTUYWUhFPLKDEU-kQPMEeJlJudgFxgaVlQ3UT_dFM7PjRccoG0Cof09qt_qAqlKG04FLmvz2u1-1Ia9JRPziR9DRLCDGuPR9hjRvhKIRcRahJLFMlVroIjgUXtmo08jxSuLV303d_odGxbDlPHt_lp0ZAOpoiO2jE9FC4RtRI9LJC2qQJqlo9awHzPK1UVdmDtJ_AAS5GpWlAhTz3P4ZqVoCLbvbg_yW6zypsOBk7aUsjR5RgdoL9buwwYxxAtMRtEpBlfVgp_GiQcCQwgUYH_0i0]--></g></svg>